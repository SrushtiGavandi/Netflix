USE NETFLIX_DB;
-- "Note: This analysis is done on a 100-row subset of the original Netflix dataset due to
--  technical import limitations. However, the queries and logic are scalable to the full dataset."

-- COUNT THE NUMBER OF MOVIES AND TV SHOWS

SELECT TYPE , COUNT(*) AS CATEGORY
FROM NETFLIX_TITLES
GROUP BY TYPE;

-- FIND THE MOST COMMON RATING FOR MOVIES AND TV SHOWS

WITH RANKED AS (SELECT TYPE, RATING, COUNT(*) AS COUNT,
RANK() OVER(PARTITION BY TYPE ORDER BY COUNT(*)) AS RANKING
FROM NETFLIX_TITLES
GROUP BY TYPE , RATING
ORDER BY TYPE , COUNT DESC) 
SELECT TYPE , RATING FROM RANKED 
WHERE RANKING = "1" ;


-- FIND ALL MOVIES RELEASED IN SPECIFIC YEAR (eg 2020)

SELECT TYPE , RELEASE_YEAR , TITLE
FROM NETFLIX_TITLES
WHERE TYPE ="MOVIE" AND RELEASE_YEAR ="2020" ;


-- FIND THE TOP 5 COUNTRIES WITH THE MOST CONTENT ON NETFLIX

WITH TOP_COUNTRIES AS (
  SELECT COUNTRY, COUNT(TITLE) AS CONTENT
  FROM NETFLIX_TITLES
  GROUP BY COUNTRY
  ORDER BY CONTENT DESC
  LIMIT 5
)
SELECT COUNTRY , CONTENT
FROM TOP_COUNTRIES;


-- IDENTIFY THE LONGEST MOVIE DURATION 

SELECT TYPE , TITLE , DURATION 
FROM NETFLIX_TITLES
WHERE TYPE ="MOVIE"
AND
CAST(SUBSTRING_INDEX(DURATION , " " , 1) AS UNSIGNED) = 
(SELECT MAX(CAST(SUBSTRING_INDEX(DURATION , " ", 1) AS UNSIGNED ))
FROM NETFLIX_TITLES
WHERE TYPE="MOVIE");


-- FIND THE CONTENT THAT ADDED IN THE LAST FIVE YEAR

SELECT TITLE , DATE_ADDED , RELEASE_YEAR 
FROM NETFLIX_TITLES 
WHERE STR_TO_DATE(DATE_ADDED , "%M %d , %Y") >= DATE_SUB(CURDATE() , INTERVAL 5 YEAR); 


-- LIST ALL THE TV SHOWS MORE THAN 5 SEASON

SELECT TITLE , DURATION 
FROM NETFLIX_TITLES 
WHERE TYPE ="TV SHOW"
AND
CAST(SUBSTRING_INDEX( DURATION , " " , 1 ) AS UNSIGNED )> 5  ;


-- FIND EACH YEAR AND THE AVERAGE NUMBER OF CONTENT RELEASE BY INDIA ON NETFLIX 
-- RETURN TOP 5 YEARS WITH HIGHESR AVG CONTENT RELEASE 

SELECT RELEASE_YEAR,
COUNT(*) AS TOTAL_CONTENT
FROM NETFLIX_TITLES
WHERE COUNTRY LIKE "INDIA"
GROUP BY RELEASE_YEAR
ORDER BY TOTAL_CONTENT DESC
LIMIT 5;


-- FIND ALL CONTENT WITHOUT A DIRECTOR

SELECT * FROM NETFLIX_TITLES
WHERE DIRECTOR IS NULL ;


-- FIND HOW MANY MOVIES ACTOR SALAMN KHAN APPEARED IN LAST 10 YEARS

SELECT TYPE , TITLE , CAST , RELEASE_YEAR
FROM NETFLIX_TITLES
WHERE TYPE ="MOVIE"
AND 
CAST LIKE "%SALMAN KHAN%"
AND
RELEASE_YEAR >=YEAR(CURDATE()) - 10;


-- FIND THE TOP 10  ACTOR WHO HAVE APPEARED IN THE HIGHEST NO OF MOVIE PRODUCED IN INDIA

SELECT ACTOR , COUNT(*) AS MOVIE_CONTENT 
FROM ( 
SELECT TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(CAST , ',' ,  n), ',' , -1)) AS ACTOR
FROM NETFLIX_TITLES
JOIN
( SELECT 1 AS n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5 
UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 ) AS NUMBERS
ON CHAR_LENGTH(CAST) - CHAR_LENGTH(REPLACE(CAST, ',' , '' )) >=n-1
WHERE TYPE ='MOVIE'
AND COUNTRY = 'INDIA'
AND CAST IS NOT NULL ) AS ACTOR_LIST
GROUP BY ACTOR 
ORDER BY MOVIE_CONTENT  DESC LIMIT 10;


-- categorise the content based on the presence of the keywords 'kill' and 'violence' in the description field ,
-- label content containing these keywords as
-- 'bad; and all other content as 'good' count how many items fall into each category

SELECT 
CASE
WHEN LOWER(description) LIKE '%KILL%' OR
LOWER(description) LIKE '%VIOLENCE%'
THEN 'BAD'
ELSE 'GOOD'
END AS CONTENT_CATEGORY ,
COUNT(*) AS CONTENT_COUNT
FROM NETFLIX_TITLES
GROUP BY CONTENT_CATEGORY
ORDER BY CONTENT_COUNT DESC ;


-- COUNT THE NUMBER OF CONTENT ITEMS IN EACH GENRE 

SELECT GENRE , COUNT(*) AS CONTENT_COUNT
FROM( SELECT TRIM(SUBSTRING_INDEX(SUBSTRING_INDEX(Listed_in , ',' , n), ',' , -1)) AS GENRE 
FROM NETFLIX_TITLES
JOIN (
SELECT 1 AS n UNION SELECT 2 UNION SELECT 3 UNION SELECT 4 UNION SELECT 5
UNION SELECT 6 UNION SELECT 7 UNION SELECT 8 UNION SELECT 9 UNION SELECT 10 ) AS NUMBERS
ON CHAR_LENGTH(Listed_in) - CHAR_LENGTH(REPLACE(Listed_in, ',' , '')) >=n-1) AS GENRE_LIST
GROUP BY GENRE
ORDER BY CONTENT_COUNT DESC ;


-- SELF -MADE QUERY

-- WHAT IS THE PERCENTAGE CONTRIBUTION BY EACH TYPE 

SELECT TYPE , 
COUNT(*) * 100.0 / (SELECT COUNT(*) FROM NETFLIX_TITLES) AS PERCENTAGE
FROM NETFLIX_TITLES
GROUP BY TYPE; 

-- WHICH DIRECTOR HAVE RELEASED THE MOST CONTENT BY GENRE FROM 2016 TO 2021

    SELECT DIRECTOR , LISTED_IN AS GENRE , COUNT(*) AS TOTAL_COUNT
  FROM NETFLIX_TITLES 
  WHERE 
  RELEASE_YEAR BETWEEN 2016 AND 2021
  GROUP BY DIRECTOR , LISTED_IN 
  ORDER BY TOTAL_COUNT DESC LIMIT 10;


-- HOW IS NETFLIX CONTENT LIBRARY IS GROWING EACH YEAR ?

SELECT RELEASE_YEAR  AS A, COUNT(*) AS TITLE_RELEASED
FROM NETFLIX_TITLES
GROUP BY A
ORDER BY A ASC;


-- WHICH GENRES ARE MOST COMMON IN TOP CONTENT PRODUCING COUNTRIES ?

SELECT COUNTRY , LISTED_IN AS GENRE , COUNT(*) AS CONTENT_NO
FROM NETFLIX_TITLES
GROUP BY COUNTRY , GENRE 
ORDER BY CONTENT_NO DESC;


--  
